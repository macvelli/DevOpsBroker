#!/bin/bash

#
# encrypt - DevOpsBroker utility for encrypting files with a symmetric cipher
#
# Copyright (C) 2018 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 16.04.4 LTS running kernel.osrelease = 4.13.0-43
#
# Encrypt files and directories using gpg and a password.
#
# Parameters:
#   $1: The name of the file or directory to encrypt
# -----------------------------------------------------------------------------
#


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Preprocessing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Load /etc/dob/ansi.conf if bittersweet function does not exist
if [[ ! "$(declare -F 'bittersweet')" ]]; then
  . /etc/dob/ansi.conf
fi

# Load /etc/dob/functions.conf if printBanner function does not exist
if [[ ! "$(declare -F 'printBanner')" ]]; then
  . /etc/dob/functions.conf
fi


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OPTION Parsing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Display usage if incorrect parameters given
if [ -z "$1" ]; then
  printUsage "encrypt FILENAME|DIRNAME"

  exit 1
fi

# Display error if target not valid file or directory
if [ ! -f "$1" ] && [ ! -d "$1" ]; then
  printError "encrypt" "Invalid target $1: No such file or directory"
  echo
  printUsage "encrypt FILENAME|DIRNAME"

  exit 1
fi


################################### Actions ###################################

if [ -d "$1" ]; then

  # Create directory.tar.gz file
  filename="$1.tar.gz"

  /bin/tar -zcf "$filename" "$1"

  # Encrypt the tarball
  /usr/bin/gpg --symmetric -z 0 "$filename" 2>/dev/null

  # Shred the tarball if gpg succeeded
  if [ -f "$filename.gpg" ]; then
    /usr/bin/shred -uzn 0 "$filename"
  fi

else

  filename="$1"

  /usr/bin/gpg --symmetric "$filename" 2>/dev/null

fi

exit 0

