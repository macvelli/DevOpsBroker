#!/bin/bash

#
# decrypt - DevOpsBroker utility for decrypting files with a symmetric cipher
#
# Copyright (C) 2018 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 16.04.4 LTS running kernel.osrelease = 4.13.0-43
#
# Decrypt files using gpg and a password.
#
# Parameters:
#   $1: The name of the file to decrypt
# -----------------------------------------------------------------------------
#


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Preprocessing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Load /etc/dob/ansi.conf if bittersweet function does not exist
if [[ ! "$(declare -F 'bittersweet')" ]]; then
  . /etc/dob/ansi.conf
fi

# Load /etc/dob/functions.conf if printBanner function does not exist
if [[ ! "$(declare -F 'printBanner')" ]]; then
  . /etc/dob/functions.conf
fi


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OPTION Parsing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Display usage if incorrect parameters given
if [ -z "$1" ]; then
  printUsage "decrypt FILENAME"

  exit 1
fi

# Display error if target not valid file
if [ ! -f "$1" ]; then
  printError "decrypt" "Invalid target $1: No such file"
  echo
  printUsage "decrypt FILENAME"

  exit 1
fi


################################### Actions ###################################

filename="$1"

if [[ "$filename" = *.gpg ]]; then

  outputFile="${filename::-4}"

  /usr/bin/gpg --output  "$outputFile" --decrypt "$filename" 2>/dev/null

else

  /usr/bin/gpg --decrypt "$filename" 2>/dev/null

fi

exit 0

