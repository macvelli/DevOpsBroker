#!/bin/bash

#
# random-password - DevOpsBroker utility for creating random passwords from the
#		    Terminal command-line
#
# Copyright (C) 2018 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 16.04.4 LTS running kernel.osrelease = 4.13.0-43
#
# Generates a random password from /dev/urandom which is actually not very
# random at all.
#
# This script reads from /dev/urandom in chunks of LENGTH until a properly
# random password has been generated.
#
# Parameters:
#   $1: Length of password to generate; must be between 8 and 128
# -----------------------------------------------------------------------------
#


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Preprocessing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Load /etc/dob/ansi.conf if bittersweet function does not exist
if [[ ! "$(declare -F 'bittersweet')" ]]; then
  . /etc/dob/ansi.conf
fi

# Load /etc/dob/functions.conf if printBanner function does not exist
if [[ ! "$(declare -F 'printBanner')" ]]; then
  . /etc/dob/functions.conf
fi


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OPTION Parsing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Display usage if no parameters given
if [ -z "$1" ]; then
  printUsage "random-password LENGTH"

  exit 1
fi

# Display error if parameter is not an integer
if [[ ! "$1" =~ [0-9]+ ]]; then
  printError "random-password" "Invalid length $1"
  echo
  printUsage "random-password LENGTH"

  exit 1
fi

# Display error if parameter is less than minimum value of 8
if [ $1 -lt 8 ]; then
  printError "random-password" "Minimum password length is 8 characters"
  echo
  printUsage "random-password LENGTH"

  exit 1
fi

# Display error if parameter exceeds maximum value of 128
if [ $1 -gt 128 ]; then
  printError "random-password" "Maximum password length is 128 characters"
  echo
  printUsage "random-password LENGTH"

  exit 1
fi


################################## Variables ##################################

password=""
dev_urandom=""


################################### Actions ###################################

while [ ${#password} -lt $1 ]; do
  dev_urandom="$(dd if=/dev/urandom bs=$1 count=1 status=none | tr -dc 'a-zA-Z0-9~!@#$%^&*_-')"

  password=$password$dev_urandom
done

echo ${password:0:$1}

exit 0

