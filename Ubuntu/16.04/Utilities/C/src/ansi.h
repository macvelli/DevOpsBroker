/*
 * ansi.h - DevOpsBroker C header file for ANSI escape sequences
 *
 * Copyright (C) 2018 Edward Smith <edwardsmith@devopsbroker.org>
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <http://www.gnu.org/licenses/>.
 * -----------------------------------------------------------------------------
 * Developed on Ubuntu 16.04.4 LTS running kernel.osrelease = 4.13.0-45
 *
 * -----------------------------------------------------------------------------
 */

// ═════════════════════════════════ Includes ═════════════════════════════════

#ifndef DEVOPSBROKER_ANSI_H
#define DEVOPSBROKER_ANSI_H

#include <string.h>
#include <errno.h>

// ═══════════════════════════════ Preprocessor ═══════════════════════════════

// Global Constants
#define SYS_ERROR -1

// Select Graphic Rendition (SGR) parameters
#define BOLD "[1m"
#define RESET "[0m"

// ANSI Color Codes
#define AQUA "[96m"
#define BLUE "[94m"
#define GOLD "[33m"
#define GREEN "[92m"
#define PURPLE "[95m"
#define RED "[91m"
#define YELLOW "[93m"
#define WHITE "[97m"

// ═══════════════════════════ Function Declarations ══════════════════════════

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    printError
 * Description: Prints error message for the given executable
 *
 * Parameters:
 *   programName    The name of the executable with the error
 *   errorMessage   The error message to print
 * ----------------------------------------------------------------------------
 */
static inline void printError(const char* programName, const char* errorMessage) {
	printf(BOLD "%s: " RED "%s" RESET, programName, errorMessage);
}

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    printSystemError
 * Description: Prints error message generated by a system call
 *
 * Parameters:
 *   programName    The name of the executable with the error
 *   messageLabel   The error message label (use to identify error location)
 *   errorNumber    The error number generated by the system call
 * ----------------------------------------------------------------------------
 */
static inline void printSystemError(const char* programName, const char* messageLabel, int errorNumber) {
	fprintf(stderr, BOLD "%s: %s: " RED " %s" RESET "\n", programName, messageLabel, strerror( errorNumber ));
}

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    printUsage
 * Description: Prints usage information message
 *
 * Parameters:
 *   usageMessage   The usage message to print
 * ----------------------------------------------------------------------------
 */
static inline void printUsage(const char* usageMessage) {
	printf(BOLD "Usage: " YELLOW "%s" RESET "\n", usageMessage);
}

#endif /* DEVOPSBROKER_ANSI_H */
