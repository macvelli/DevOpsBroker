/*
 * error.h - DevOpsBroker C header file for providing error-handling functionality
 *
 * Copyright (C) 2018 Edward Smith <edwardsmith@devopsbroker.org>
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <http://www.gnu.org/licenses/>.
 * -----------------------------------------------------------------------------
 * Developed on Ubuntu 16.04.5 LTS running kernel.osrelease = 4.15.0-34
 *
 * echo ORG_DEVOPSBROKER_LANG_ERROR | md5sum | cut -c 25-32
 * -----------------------------------------------------------------------------
 */

#ifndef ORG_DEVOPSBROKER_LANG_ERROR_H
#define ORG_DEVOPSBROKER_LANG_ERROR_H

// ═════════════════════════════════ Includes ═════════════════════════════════

#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include <errno.h>

#include "string.h"
#include "../terminal/ansi.h"

// ═══════════════════════════════ Preprocessor ═══════════════════════════════

// Global Constants
#define SYSTEM_ERROR_CODE -1

// ═════════════════════════════════ Typedefs ═════════════════════════════════


// ════════════════════════════════ Structures ════════════════════════════════


// ═════════════════════════════ Global Variables ═════════════════════════════

const char* programName;

// ═══════════════════════════ Function Declarations ══════════════════════════

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    c7c88e52_ensureUserIsRoot
 * Description: Ensures the executing user is root
 * ----------------------------------------------------------------------------
 */
static inline void c7c88e52_ensureUserIsRoot() {
	// Display error if not running as root
	const char* user = getenv("USER");
	if (f6215943_isNotEqual(user, "root")) {
		printf(BOLD "%s: " RED "Permission denied (you must be root)\n" RESET, programName);
		exit(EXIT_FAILURE);
	}
}

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    c7c88e52_printError_string
 * Description: Prints error message for the given executable
 *
 * Parameters:
 *   errorMessage   The error message to print
 * ----------------------------------------------------------------------------
 */
static inline void c7c88e52_printError_string(const char* errorMessage) {
	printf(BOLD "%s: " RED "%s\n" RESET, programName, errorMessage);
}

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    c7c88e52_printError_string_int
 * Description: Prints error message generated by a system call
 *
 * Parameters:
 *   errorMessage   The error message to display from the program
 *   errorNumber    The error number generated by the system call
 * ----------------------------------------------------------------------------
 */
static inline void c7c88e52_printError_string_int(const char* errorMessage, const int errorNumber) {
	fprintf(stderr, BOLD "%s: " RED "%s: %s\n" RESET, programName, errorMessage, strerror( errorNumber ));
}

/* ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
 * Function:    c7c88e52_printUsage
 * Description: Prints usage information message
 *
 * Parameters:
 *   message        The usage message to print
 * ----------------------------------------------------------------------------
 */
static inline void c7c88e52_printUsage(const char* message) {
	printf(BOLD "Usage: " YELLOW "%s\n" RESET, message);
}

#endif /* ORG_DEVOPSBROKER_LANG_ERROR_H */
