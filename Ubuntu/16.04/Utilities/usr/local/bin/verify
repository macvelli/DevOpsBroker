#!/bin/bash

#
# verify - DevOpsBroker utility for creating and verifying file hashes and signatures
#
# Copyright (C) 2018 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 16.04.4 LTS running kernel.osrelease = 4.13.0-45
#
# To create a PGP signature of a file:
#   o sig sign FILENAME
#
# To verify the PGP signature of a file:
#   o sig verify PGP_SIG FILENAME
#
# NOTE: ASCII-format detached signatures generate a .asc extension while binary
#	detached signatures generate a .sig extension
# -----------------------------------------------------------------------------
#

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Preprocessing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Load /etc/devops/ansi.conf if ANSI_CONFIG is unset
if [ -z "$ANSI_CONFIG" ] && [ -f /etc/devops/ansi.conf ]; then
	source /etc/devops/ansi.conf
fi

${ANSI_CONFIG?"[1;91mCannot load '/etc/devops/ansi.conf': No such file[0m"}

# Load /etc/devops/exec.conf if EXEC_CONFIG is unset
if [ -z "$EXEC_CONFIG" ] && [ -f /etc/devops/exec.conf ]; then
	source /etc/devops/exec.conf
fi

${EXEC_CONFIG?"[1;91mCannot load '/etc/devops/exec.conf': No such file[0m"}

# Load /etc/devops/functions.conf if FUNC_CONFIG is unset
if [ -z "$FUNC_CONFIG" ] && [ -f /etc/devops/functions.conf ]; then
	source /etc/devops/functions.conf
fi

${FUNC_CONFIG?"[1;91mCannot load '/etc/devops/functions.conf': No such file[0m"}

################################## Functions ##################################

# Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
# Function:     showMissingFilename
# Description:  Displays usage information when the filename is missing
# -----------------------------------------------------------------------------
function showMissingFilename() {
	# BEGIN showMissingFilename function

	if [ "$command" == 'sha256' ]; then
		printUsage "verify sha256 FILE ${gold}[SHA256_HASH]"
	elif [ "$command" == 'sign' ]; then
		printUsage "verify sign ${gold}[OPTION] ${yellow}FILE"
		echo ${bold}
		echo "Valid Options:${romantic}"
		echo -e '  -a\t'       'Create an ASCII-format detached signature file'
		echo ${reset}
	elif [ "$command" == 'pgp' ]; then
		printUsage 'verify pgp FILE SIG_FILE'
	fi

	# END showMissingFilename function
}

################################## Variables ##################################

## Bash exec variables
EXEC_SHA256SUM=/usr/bin/sha256sum

## Options
command="$1"

## Variables
validCommands=('pgp' 'sha256' 'sign')

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OPTION Parsing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Display usage if no parameters given
if [ -z "$command" ]; then
	printUsage 'verify { pgp | sha256 | sign }'
	exit 1
fi

# Display error if invalid command
if [ $(containsElement "$command" "${validCommands[@]}") != '0' ]; then
	printError 'verify' "Invalid command: $command"
	echo
	printUsage 'verify { pgp | sha256 | sign }'

	exit 1
fi

if [ "$command" == 'sha256' ]; then
	# File is the second parameter
	fileName="$2"

	# SHA256 Hash is the third parameter
	sha256Hash="$3"

elif [ "$command" == 'sign' ]; then

	if [ "$2" == '-a' ]; then
		asciiFormat='true'

		# File is the third parameter
		fileName="$3"
	else
		asciiFormat='false'

		# File is the second parameter
		fileName="$2"
	fi

elif [ "$command" == 'pgp' ]; then
	# File is the second parameter
	fileName="$2"

	# Signature file is the third parameter
	sigFile="$3"

	errorMessage=$(isValidFile 'verify' "$sigFile")

	# Display error if signature file parameter is missing or invalid
	if [ "$errorMessage" != '0' ]; then
		echo "$errorMessage"
		echo
		printUsage 'verify pgp FILE SIG_FILE'

		exit 1
	fi
fi

errorMessage=$(isValidFile 'verify' "$fileName")

# Display error if file parameter is missing or invalid
if [ "$errorMessage" != '0' ]; then
	echo "$errorMessage"
	echo
	showMissingFilename

	exit 1
fi

################################### Actions ###################################

if [ "$command" == 'pgp' ]; then

	$EXEC_GPG --verify "$sigFile" "$fileName"

elif [ "$command" == 'sha256' ]; then

	if [ -z "$sha256Hash" ]; then

		# Compute SHA256 Hash for the given filename
		$EXEC_SHA256SUM "$fileName"

	else
		if [ -f "$sha256Hash" ]; then

			if ! $EXEC_GREP -Fq "$fileName" "$sha256Hash"; then
				printError 'verify' "Cannot verify SHA256 hash for '$fileName': No such entry in '$sha256Hash'"
				echo
				exit 1
			fi

			$EXEC_SHA256SUM --check "$sha256Hash"

		else
			echo "$sha256Hash"  "$fileName" > verify-sha256sum.txt
			$EXEC_SHA256SUM --check verify-sha256sum.txt
			$EXEC_RM verify-sha256sum.txt
		fi
	fi

elif [ "$command" == 'sign' ]; then

	if [ "$asciiFormat" == 'false' ]; then
		$EXEC_GPG --detach-sig "$fileName"
	else
		$EXEC_GPG --detach-sig -a "$fileName"
	fi
fi

exit 0
