#
# functions-io.conf - DevOpsBroker configuration file for I/O-related functions
#
# Copyright (C) 2019 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 18.04.2 LTS running kernel.osrelease = 4.18.0-15
#
# The following functions have been defined within this configuration file:
#   o isExecutable(fileName)
#   o isValidDirectory(scriptName, dirName)
#   o isValidFile(scriptName, fileName)
# -----------------------------------------------------------------------------
#

############################ Environment Variables ############################

# Export all of the following variables
set -a

# Indicates this configuration file has already been loaded
FUNC_IO_CONFIG=true

# Export variables complete
set +a

################################## Functions ##################################

# ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
# Function:     isExecutable
# Description:  Checks whether the file is executable; makes it executable for the user if not
#
# Parameter $1: The file to check if it is executable
# -----------------------------------------------------------------------------
function isExecutable() {
	if [ ! -x "$1" ]; then
		/bin/chmod u+x "$1"
	fi

	echo "$1"
}

# ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
# Function:     isValidDirectory
# Description:  Verifies whether the directory parameter is not empty and is a valid directory
#
# Parameters:
#   scriptName  The name of the script
#   dirName     The directory name to validate
# Returns:      Zero if directory is valid, error message if invalid
# -----------------------------------------------------------------------------
function isValidDirectory() {
	local scriptName="$1"
	shift
	local dirName="$@"

	# Display error if no directory parameter given
	if [ -z "$dirName" ]; then
		printError $scriptName 'Missing directory parameter'
		return 0
	fi

	# Display error if invalid directory parameter given
	if [ ! -d "$dirName" ]; then
		printError $scriptName "Cannot access '$dirName': No such directory"
		return 0
	fi

	echo '0'
}

# ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
# Function:     isValidFile
# Description:  Verifies whether the file parameter is not empty and is a valid file
#
# Parameters:
#   scriptName  The name of the script
#   fileName    The file name to validate
# Returns:      Zero if file is valid, error message if invalid
# -----------------------------------------------------------------------------
function isValidFile() {
	local scriptName="$1"
	shift
	local fileName="$@"

	# Display error if no file parameter given
	if [ -z "$fileName" ]; then
		printError $scriptName 'Missing file parameter'
		return 0
	fi

	# Display error if invalid file parameter given
	if [ ! -f "$fileName" ]; then
		printError $scriptName "Cannot access '$fileName': No such file"
		return 0
	fi

	echo '0'
}

## Export functions to shell
export -f isExecutable
export -f isValidDirectory
export -f isValidFile
