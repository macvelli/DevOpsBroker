#!/bin/bash

#
# appbroker - DevOpsBroker administrative tool for installing non-packaged applications
#
# Copyright (C) 2019 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 18.04.2 LTS running kernel.osrelease = 4.18.0-16
#
# -----------------------------------------------------------------------------
#

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Preprocessing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Load /etc/devops/ansi.conf if ANSI_CONFIG is unset
if [ -z "$ANSI_CONFIG" ] && [ -f /etc/devops/ansi.conf ]; then
	source /etc/devops/ansi.conf
fi

${ANSI_CONFIG?"[1;91mCannot load '/etc/devops/ansi.conf': No such file[0m"}

# Load /etc/devops/exec.conf if EXEC_CONFIG is unset
if [ -z "$EXEC_CONFIG" ] && [ -f /etc/devops/exec.conf ]; then
	source /etc/devops/exec.conf
fi

${EXEC_CONFIG?"[1;91mCannot load '/etc/devops/exec.conf': No such file[0m"}

# Load /etc/devops/functions.conf if FUNC_CONFIG is unset
if [ -z "$FUNC_CONFIG" ] && [ -f /etc/devops/functions.conf ]; then
	source /etc/devops/functions.conf
fi

${FUNC_CONFIG?"[1;91mCannot load '/etc/devops/functions.conf': No such file[0m"}

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Robustness ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

set -o errexit                 # Exit if any statement returns a non-true value
set -o nounset                 # Exit if use an uninitialised variable
set -o pipefail                # Exit if any statement in a pipeline returns a non-true value
IFS=$'\n\t'                    # Default the Internal Field Separator to newline and tab

scriptName='appbroker'

# Display error if not running as root
if [ "$USER" != 'root' ]; then
	printError $scriptName 'Permission denied (you must be root)'
	exit 1
fi

################################## Functions ##################################


################################## Variables ##################################

## Bash exec variables
EXEC_APT=/usr/bin/apt
EXEC_APT_KEY=/usr/bin/apt-key
EXEC_SHA256SUM=/usr/bin/sha256sum

## Options
command=${1:-}
appName=${2:-}

## Variables
sudoCommands=('install')
validCommands=(${sudoCommands[@]})

usageMessage="$scriptName install APP_NAME"

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OPTION Parsing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Display usage if no parameters given
if [ -z "$command" ]; then
	printUsage $usageMessage
	exit 1
fi

# Display error if invalid command
if [ $(containsElement "$command" "${validCommands[@]}") != '0' ]; then
	printError $scriptName "Invalid command: '$command'"
	echo
	printUsage $usageMessage

	exit 1
fi

if [ $command == 'install' ]; then
	# Display error if application name parameter is missing
	if [ -z "$appName" ]; then
		printError $scriptName 'Missing application name parameter'
		echo
		printUsage "$scriptName $command { atom | google-cloud-sdk }"

		exit 1
	fi

	# Display error if application name parameter is invalid
	if [[ ! "$appName" =~ ^(atom|google-cloud-sdk)$ ]]; then
		printError $scriptName "Invalid application name: '$appName'"
		echo
		printUsage "$scriptName $command { atom | google-cloud-sdk }"

		exit 1
	fi
fi

################################### Actions ###################################

if [ $command == 'install' ]; then

	if [ $appName == 'atom' ]; then
		if [ ! -f /etc/apt/sources.list.d/atom.list ]; then
			$EXEC_WGET -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | $EXEC_APT_KEY add -

			$SHELL -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
		fi

		$EXEC_APT update

		$EXEC_APT install atom

	elif [ $appName == 'google-cloud-sdk' ]; then
		sdkFileName='google-cloud-sdk-238.0.0-linux-x86_64.tar.gz'
		sdkFileSHA256='50746c8c02ac4014265661f8fed9c07c81968b461e8eb077a382c23c039b61d6'
		installDir='/opt'

		# Download the google-cloud-sdk file
		if [ ! -f "$HOME/Downloads/$sdkFileName" ]; then
			printInfo "Downloading $sdkFileName"

			$EXEC_CURL --output "$HOME/Downloads/$sdkFileName" https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/$sdkFileName
		fi

		# Install google-cloud-sdk
		if [ ! -d "$installDir/google-cloud-sdk" ]; then
			# Validate the google-cloud-sdk SHA256 checksum
			printInfo "Validating $sdkFileName SHA256 checksum"

			IFS=' '; fileChecksum=( $($EXEC_SHA256SUM "$HOME/Downloads/$sdkFileName") ); IFS=$'\n\t'
			if [ "$sdkFileSHA256" != "${fileChecksum[0]}" ]; then
				printError $scriptName "Invalid SHA256 checksum: '${fileChecksum[0]}'"
				echo

				printInfo "Removing google-cloud-sdk file"
				$EXEC_RM "$HOME/Downloads/$sdkFileName"

				exit 1
			fi

			# Extract google-cloud-sdk file
			printInfo "Extracting $sdkFileName to $installDir"

			$EXEC_TAR xzf "$HOME/Downloads/$sdkFileName" --directory="$installDir"
		fi

		# Enable Bash completion
		if [ ! -f /etc/bash_completion.d/google-cloud-sdk ]; then
			printInfo 'Enabling google-cloud-sdk Bash completion'

			$EXEC_CP -a /opt/google-cloud-sdk/completion.bash.inc /etc/bash_completion.d/google-cloud-sdk
		fi

		# Setup user's $HOME/bin directory
		if [ ! -L "$HOME/bin/gcloud" ]; then
			printInfo "Adding google-cloud-sdk commands to $HOME/bin"

			$EXEC_CP -rs $installDir/google-cloud-sdk/bin/* $HOME/bin/
		fi

		# Initialize google-cloud-sdk
		sdkDefaultConfig="$HOME/.config/gcloud/configurations/config_default"
		if [ ! -f "$sdkDefaultConfig" ] || [ ! -s "$sdkDefaultConfig" ]; then
			printInfo "Initializing google-cloud-sdk"

			$HOME/bin/gcloud init
		fi
	fi
fi

exit 0
